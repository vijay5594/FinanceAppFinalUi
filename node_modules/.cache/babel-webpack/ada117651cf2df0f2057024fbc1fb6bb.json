{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../services/loading.service\";\nimport * as i4 from \"src/app/services/user.service\";\nimport * as i5 from \"src/app/services/notification.service\";\nimport * as i6 from \"src/app/services/api.service\";\nimport * as i7 from \"@ionic/angular\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(router, fb, loadingService, userService, toast, apiService) {\n      this.router = router;\n      this.fb = fb;\n      this.loadingService = loadingService;\n      this.userService = userService;\n      this.toast = toast;\n      this.apiService = apiService;\n\n      this.generateLoginForm = () => {\n        this.loginForm = this.fb.group({\n          userName: ['', Validators.required],\n          password: ['', Validators.required]\n        });\n      };\n\n      this.generateLoginForm();\n\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n\n    ngOnInit() {}\n\n    doLogin(loginForm) {\n      this.apiService.doLogin(this.loginForm.value).subscribe(data => {\n        if (data) {\n          console.log(data);\n          this.userService.User = data.userName;\n          this.userService.Role = data.role;\n\n          if (data.role == \"Admin\") {\n            this.userService.IsSuperUser = false;\n            this.loadingService.hide();\n            this.router.navigate(['/tabs/tab1'], {\n              replaceUrl: true\n            });\n          } else {\n            this.userService.IsSuperUser = true;\n            this.loadingService.hide();\n            this.router.navigate(['/tabs/tab1'], {\n              replaceUrl: true\n            });\n          }\n        } else {\n          this.toast.error('Please enter valid username');\n        }\n      }, error => {\n        console.log(error);\n        this.loadingService.hide();\n        this.toast.error('Unable to validate user. Please try agian after sometime.');\n      });\n    }\n\n    thisFormValid() {\n      if (this.loginForm.valid) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.LoadingService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.NotificationService), i0.ɵɵdirectiveInject(i6.ApiService));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[\"padding\", \"\", 3, \"fullscreen\"], [1, \"login-card\"], [\"slot\", \"start\", \"src\", \"../../../assets/icon/images.png\"], [\"padding\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"required\", \"\", \"type\", \"text\", \"placeholder\", \"UserName\", \"name\", \"userName\", \"formControlName\", \"userName\"], [\"name\", \"person-outline\"], [\"required\", \"\", \"type\", \"password\", \"placeholder\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"passcode\"], [\"name\", \"lock-closed-outline\"], [1, \"ion-padding-top\"], [\"expand\", \"block\", \"type\", \"submit\", 1, \"ion-no-margin\", \"btn-fill\", 3, \"disabled\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_3_listener() {\n          return ctx.doLogin(ctx.loginForm.value);\n        });\n        i0.ɵɵelementStart(4, \"ion-input\", 4);\n        i0.ɵɵelement(5, \"ion-icon\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-input\", 6);\n        i0.ɵɵelement(7, \"ion-icon\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelementStart(9, \"ion-button\", 9);\n        i0.ɵɵtext(10, \"Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !ctx.thisFormValid());\n      }\n    },\n    directives: [i7.IonContent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i7.IonInput, i7.TextValueAccessor, i2.RequiredValidator, i2.NgControlStatus, i2.FormControlName, i7.IonIcon, i7.IonButton],\n    styles: [\"img[_ngcontent-%COMP%]{margin-top:2rem;margin-bottom:2rem}.passcode[_ngcontent-%COMP%]{margin-top:2rem;margin-bottom:1rem}.login-card[_ngcontent-%COMP%]{padding:20px;width:400px;margin:auto;border-radius:2px;box-shadow:0 3px 8px 3px #00000024;overflow:hidden;position:relative;top:15%}.login-card[_ngcontent-%COMP%]   ion-input[_ngcontent-%COMP%]{border:1px solid #16438b!important;border-radius:5px}.login-card[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin-top:20px!important}.login-card[_ngcontent-%COMP%]   ion-input[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{border-right:1px solid #16438b;padding:13px;font-size:20px;color:#16438b;margin-left:5px}.login-card[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{height:44px;font-size:16px;width:100%;margin-bottom:10px;-webkit-appearance:none;background:#fff;padding:0 8px;box-sizing:border-box;-moz-box-sizing:border-box}.login-card[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]:hover{border:1px solid #b9b9b9;border-top:1px solid #a0a0a0;box-shadow:inset 0 1px 2px #0000001a}.login-card[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;color:#666;font-weight:400;text-align:center;display:inline-block;opacity:.6;transition:opacity ease .5s}.login-card[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{opacity:1}ion-item[_ngcontent-%COMP%]{border:1px solid #16438b!important;border-radius:5px;--background: transparent;height:44px;box-sizing:border-box;-moz-box-sizing:border-box;display:flex}ion-item[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{border-right:1px solid #16438b;font-size:20px;color:#16438b;height:100%;height:-moz-available;height:-webkit-fill-available;padding:0 12px;margin-left:-9px}ion-item[_ngcontent-%COMP%]   ion-select[_ngcontent-%COMP%]{margin:auto}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}