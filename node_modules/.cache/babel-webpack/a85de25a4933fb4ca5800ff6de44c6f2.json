{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as FileSaver from 'file-saver';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/notification.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"src/app/services/user.service\";\nexport let Tab3Page = /*#__PURE__*/(() => {\n  class Tab3Page {\n    constructor(apiService, router, notificationService, modal, http, fb, toast, alertController, userService) {\n      this.apiService = apiService;\n      this.router = router;\n      this.notificationService = notificationService;\n      this.modal = modal;\n      this.http = http;\n      this.fb = fb;\n      this.toast = toast;\n      this.alertController = alertController;\n      this.userService = userService;\n      this.currentUser = localStorage.getItem('userName');\n      this.productId = localStorage.getItem('productId');\n      this.isShowError = false;\n      this.ischeckMobileNumber = true;\n      this.ischeckAdharNumber = true;\n      this.page = 1;\n      this.arrayData = [];\n      this.searchvalue = false;\n\n      this.getCustomerDetail = () => {\n        this.apiService.getProductDetailsById(localStorage.getItem('productId')).subscribe(data => {\n          var _a;\n\n          console.log(data, 'dfffffff');\n          this.pName = (_a = data[0]) === null || _a === void 0 ? void 0 : _a.productName;\n          console.log(data, \"iuhfjhedjkgsdjkhjk\");\n        });\n      };\n\n      this.generateCustomerForm = () => {\n        this.customerForm = this.fb.group({\n          customerName: ['', Validators.required],\n          guarantorName: ['', Validators.required],\n          address: ['', Validators.required],\n          mobileNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n          additionalMobileNumber: ['', [Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n          aadharNumber: ['', Validators.required],\n          referredBy: ['', Validators.required],\n          fileUpload: ['', Validators.required],\n          createdBy: [this.currentUser],\n          dateOfCreated: [moment().format()]\n        });\n      };\n\n      this.generateDetails = () => {\n        this.updateForm = this.fb.group({\n          customerId: [''],\n          customerName: ['', Validators.required],\n          guarantorName: ['', Validators.required],\n          address: ['', Validators.required],\n          mobileNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n          additionalMobileNumber: ['', [Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n          aadharNumber: ['', Validators.required],\n          referredBy: ['', Validators.required],\n          attachmentId: [''],\n          attachmentName: [''] // status: ['']\n\n        });\n      };\n\n      this.uploadcandidateFile = fileChangeEvent => {\n        const photo = fileChangeEvent.target.files[0];\n        const formData = new FormData();\n        formData.append('file', photo);\n        this.apiService.fileUpload(formData).subscribe(file => {\n          this.attachmentId = file.attachmentId;\n        });\n      };\n\n      this.getCustomerDetail();\n      this.generateCustomerForm();\n      this.generateDetails();\n      this.loadMorePosts('');\n    }\n\n    ngOnInit() {}\n\n    ionViewWillEnter() {\n      this.generateCustomerForm();\n      this.generateDetails();\n      this.getCustomerDetail();\n      console.log('came');\n    }\n\n    ionViewWillLeave() {}\n\n    loadMorePosts(event) {\n      this.apiService.CustomerPagination(this.page).subscribe(data => {\n        setTimeout(() => {\n          var _a;\n\n          console.log(data, \"first\");\n\n          for (let i = 0; i < data.length; i++) {\n            this.arrayData.push(data[i]);\n            this.filterToPush = this.arrayData;\n          }\n\n          (_a = event.target) === null || _a === void 0 ? void 0 : _a.complete();\n          this.page++;\n        }, 800);\n      });\n    }\n\n    doInfinite(event) {\n      if (event) {\n        console.log(event, 'first');\n        let value = event.target.value;\n        console.log(value, 'search');\n        this.apiService.FilterCustomerSearch(value).subscribe(data => {\n          this.filterToPush = data;\n          this.infiniteScroll.disabled = true;\n        });\n      }\n\n      if (event.target.value === '' || undefined) {\n        console.log('geetha');\n        window.location.reload();\n        console.log(this.filterToPush, 'last');\n        this.loadMorePosts(event);\n      }\n    }\n\n    getFileDownload(id) {\n      return this.http.get('https://localhost:5001/api/Fileupload/DownloadFile?id=' + id, {\n        responseType: 'blob'\n      }).subscribe(event => {\n        FileSaver.saveAs(event);\n      });\n    }\n\n    presentAlertConfirm(data, custName) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let payload = {\n          'createdBy': this.currentUser,\n          'customerId': data,\n          // 'productId': this.userService.getProductId(),\n          'productId': localStorage.getItem('productId')\n        };\n        const alert = yield this.alertController.create({\n          cssClass: \"my-custom-class\",\n          message: \"Are you sure want to add \" + custName + \" to \" + this.pName,\n          buttons: [{\n            text: \"Cancel\",\n            role: \"cancel\",\n            cssClass: \"secondary\",\n            handler: blah => {}\n          }, {\n            text: \"Okay\",\n            handler: () => {\n              this.apiService.insertProductCustomer(payload).subscribe(data => {\n                console.log(data);\n                this.toast.success('Added Successfully');\n                this.router.navigate(['/tabs/tab1']);\n              }, error => {\n                if (error.status === 400) {\n                  this.notificationService.error(\"Slot Maximum Limit Reached \");\n                }\n\n                ;\n              });\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    customerHistory(data) {\n      console.log(data, 'cus');\n      this.userService.customer = data;\n      this.apiService.productForCustomerDetails(data).subscribe(data => {\n        console.log(data, 'data');\n        this.router.navigate(['/tabs/tab6']);\n      });\n    }\n\n    get f() {\n      return this.customerForm.controls;\n    }\n\n    save(customerForm) {\n      customerForm.attachmentId = this.attachmentId;\n      this.apiService.insertCustomer(this.customerForm.value).subscribe(data => {\n        this.customerForm.reset();\n        this.notificationService.success('Customer details saved successfully');\n        this.modal.dismiss().then(() => {\n          window.location.reload();\n        }); //this.getCustomerDetail();\n\n        this.loadMorePosts('');\n      });\n    }\n\n    CheckMobileNumber() {\n      this.isShowError = false;\n      this.ischeckMobileNumber = true;\n\n      if (this.f.mobileNumber.invalid) {\n        return;\n      } else {\n        this.apiService.existMobileNumber(this.f.mobileNumber.value).subscribe(data => {\n          if (data['message'] == 'You Can Enter') {\n            this.ischeckMobileNumber = false;\n          } else {\n            this.ischeckMobileNumber = true;\n            this.isShowError = true;\n          }\n        });\n      }\n    }\n\n    CheckAdharNumber() {\n      this.isShowErrors = false;\n      this.ischeckAdharNumber = true;\n\n      if (this.f.aadharNumber.invalid) {\n        return;\n      } else {\n        this.apiService.existAdharNumber(this.f.aadharNumber.value).subscribe(data => {\n          if (data['message'] == 'You Can Enter') {\n            this.ischeckAdharNumber = false;\n          } else {\n            this.ischeckAdharNumber = true;\n            this.isShowErrors = true;\n          }\n        });\n      }\n    }\n\n    validateNumber(e) {\n      const keyCode = e.keyCode;\n\n      if ((e.shiftKey || e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105) && e.keyCode != 8) {\n        e.preventDefault();\n      }\n    }\n\n    onClose() {\n      this.modal.dismiss();\n      this.loadMorePosts('');\n    }\n\n    thisFormValid() {\n      if (this.customerForm.valid) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    updateCustomer(update) {\n      this.apiService.updateCustomer(this.updateForm.value).subscribe(data => {\n        console.log(data, 'hello');\n        this.toast.success('Added Successfully');\n        this.modal.dismiss();\n        this.loadMorePosts(''); //this.getCustomerDetail();\n      }, error => {\n        if (error.status === 400) {\n          this.notificationService.error(\"Mobile Number or Aadhar Number Exists Already!\");\n        }\n      });\n    }\n\n  }\n\n  Tab3Page.ɵfac = function Tab3Page_Factory(t) {\n    return new (t || Tab3Page)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.ModalController), i0.ɵɵdirectiveInject(i5.HttpClient), i0.ɵɵdirectiveInject(i6.FormBuilder), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.AlertController), i0.ɵɵdirectiveInject(i7.UserService));\n  };\n\n  Tab3Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Tab3Page,\n    selectors: [[\"app-tab3\"]],\n    viewQuery: function Tab3Page_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(IonInfiniteScroll, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infiniteScroll = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function Tab3Page_Template(rf, ctx) {},\n    styles: [\"ion-label[_ngcontent-%COMP%]{font-weight:600;margin:0;color:#001d6e!important}ion-input[_ngcontent-%COMP%], ion-textarea[_ngcontent-%COMP%], ion-select[_ngcontent-%COMP%]{border-radius:10px;margin-top:1rem;border:.5px solid #c7d1ef;--padding-start: 15px !important;background-color:#fff}ion-item[_ngcontent-%COMP%]{--inner-border-width: 0;padding-right:10px;margin:0}.text-danger[_ngcontent-%COMP%]{font-weight:600;color:#f03a3a;margin:1.5rem;margin-bottom:10rem!important}.alert-danger[_ngcontent-%COMP%]{font-weight:600;color:#f03a3a;margin:1.5rem;margin-bottom:10rem!important}.scrollbar[_ngcontent-%COMP%]{height:450px;overflow-y:scroll;margin-top:25px;margin-bottom:25px}#style-1[_ngcontent-%COMP%]::-webkit-scrollbar{width:5px;background-color:#f5f5f5}#style-1[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;box-shadow:inset 0 0 6px #0000004d;background-color:#22577e}.saveButton[_ngcontent-%COMP%]{width:6.5rem;height:3rem;font-weight:700}.buttonCenter[_ngcontent-%COMP%]{margin-left:1.5rem}.hiddenText[_ngcontent-%COMP%]{display:none}ion-card[_ngcontent-%COMP%]{border-radius:18px;box-shadow:#64646f33 0 7px 29px}p[_ngcontent-%COMP%]{color:#001d6e}h1[_ngcontent-%COMP%]{color:#fff;font-weight:800}@media (min-width: 500px){ion-modal[_ngcontent-%COMP%]{--height: 600px}}.paddingOnSide[_ngcontent-%COMP%]{padding:0 30px 0 20px}ion-icon[_ngcontent-%COMP%]{font-size:1.2rem}.isDataNot[_ngcontent-%COMP%]{text-align:center!important}\"]\n  });\n  return Tab3Page;\n})();","map":null,"metadata":{},"sourceType":"module"}